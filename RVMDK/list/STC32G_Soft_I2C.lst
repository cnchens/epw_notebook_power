C251 COMPILER V5.60.0,  STC32G_Soft_I2C                                                    26/11/24  21:24:50  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_Soft_I2C
OBJECT MODULE PLACED IN .\list\STC32G_Soft_I2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\Driver\src\STC32G_Soft_I2C.c XSMALL INTR2 BROWSE INCDIR(..\Driver\i
                    -nc;..\User;..\App\inc) DEBUG PRINT(.\list\STC32G_Soft_I2C.lst) TABS(2) OBJECT(.\list\STC32G_Soft_I2C.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCAI.com ---------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   10          /* --- QQ:  800003751 -------------------------------------------------*/
   11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   12          /*---------------------------------------------------------------------*/
   13          
   14          #include  "STC32G_Soft_I2C.h"
   15          
   16          sbit    SDA = P0^1; //定义SDA
   17          sbit    SCL = P0^0; //定义SCL
   18          
   19          //========================================================================
   20          // 函数: void I2C_Delay(void)
   21          // 描述: I2C延时函数.
   22          // 参数: none.
   23          // 返回: none.
   24          // 版本: V1.0, 2020-09-15
   25          //========================================================================
   26          void I2C_Delay(void) //for normal MCS51, delay (2 * dly + 4) T, for STC12Cxxxx delay (4 * dly + 10) T
   27          {
   28   1        u8  dly;
   29   1        dly = MAIN_Fosc / 2000000UL;        //按2us计算
   30   1        while(--dly);
   31   1      }
   32          
   33          //========================================================================
   34          // I2C总线函数
   35          //========================================================================
   36          void I2C_Start(void)         //start the I2C, SDA High-to-low when SCL is high
   37          {
   38   1        SDA = 1;
   39   1        I2C_Delay();
   40   1        SCL = 1;
   41   1        I2C_Delay();
   42   1        SDA = 0;
   43   1        I2C_Delay();
   44   1        SCL = 0;
   45   1        I2C_Delay();
   46   1      }       
   47          
   48          
   49          void I2C_Stop(void)           //STOP the I2C, SDA Low-to-high when SCL is high
   50          {
   51   1        SDA = 0;
   52   1        I2C_Delay();
   53   1        SCL = 1;
   54   1        I2C_Delay();
   55   1        SDA = 1;
   56   1        I2C_Delay();
   57   1      }
   58          
C251 COMPILER V5.60.0,  STC32G_Soft_I2C                                                    26/11/24  21:24:50  PAGE 2   

   59          void S_ACK(void)              //Send ACK (LOW)
   60          {
   61   1        SDA = 0;
   62   1        I2C_Delay();
   63   1        SCL = 1;
   64   1        I2C_Delay();
   65   1        SCL = 0;
   66   1        I2C_Delay();
   67   1      }
   68          
   69          void S_NoACK(void)           //Send No ACK (High)
   70          {
   71   1        SDA = 1;
   72   1        I2C_Delay();
   73   1        SCL = 1;
   74   1        I2C_Delay();
   75   1        SCL = 0;
   76   1        I2C_Delay();
   77   1      }
   78                  
   79          void I2C_Check_ACK(void)     //Check ACK, If F0=0, then right, if F0=1, then error
   80          {
   81   1        SDA = 1;
   82   1        I2C_Delay();
   83   1        SCL = 1;
   84   1        I2C_Delay();
   85   1        F0  = SDA;
   86   1        SCL = 0;
   87   1        I2C_Delay();
   88   1      }
   89          
   90          //========================================================================
   91          // 函数: void I2C_WriteAbyte(u8 dat)
   92          // 描述: I2C发送一个字节数据函数.
   93          // 参数: 发送的数据.
   94          // 返回: none.
   95          // 版本: V1.0, 2020-09-15
   96          //========================================================================
   97          void I2C_WriteAbyte(u8 dat)     //write a byte to I2C
   98          {
   99   1        u8 i;
  100   1        i = 8;
  101   1        do
  102   1        {
  103   2          if(dat & 0x80)  SDA = 1;
  104   2          else            SDA = 0;
  105   2          dat <<= 1;
  106   2          I2C_Delay();
  107   2          SCL = 1;
  108   2          I2C_Delay();
  109   2          SCL = 0;
  110   2          I2C_Delay();
  111   2        }
  112   1        while(--i);
  113   1      }
  114          
  115          //========================================================================
  116          // 函数: u8 I2C_ReadAbyte(void)
  117          // 描述: I2C读取一个字节数据函数.
  118          // 参数: none.
  119          // 返回: 读取数据.
  120          // 版本: V1.0, 2020-09-15
  121          //========================================================================
  122          u8 I2C_ReadAbyte(void)          //read A byte from I2C
  123          {
  124   1        u8 i,dat;
C251 COMPILER V5.60.0,  STC32G_Soft_I2C                                                    26/11/24  21:24:50  PAGE 3   

  125   1        i = 8;
  126   1        SDA = 1;
  127   1        do
  128   1        {
  129   2          SCL = 1;
  130   2          I2C_Delay();
  131   2          dat <<= 1;
  132   2          if(SDA)     dat++;
  133   2          SCL  = 0;
  134   2          I2C_Delay();
  135   2        }
  136   1        while(--i);
  137   1        return(dat);
  138   1      }
  139          
  140          //========================================================================
  141          // 函数: void SI2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
  142          // 描述: I2C写入数据函数.
  143          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p写入数据存储位置, number写入数据个数.
  144          // 返回: none.
  145          // 版本: V1.0, 2020-09-15
  146          //========================================================================
  147          void SI2C_WriteNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)  /*  DeviceAddress,WordAddress,First Dat
             -a Address,Byte lenth  */
  148          {
  149   1        I2C_Start();
  150   1        I2C_WriteAbyte(dev_addr);
  151   1        I2C_Check_ACK();
  152   1        if(!F0)                                           //F0=0,right, F0=1,error
  153   1        {
  154   2          I2C_WriteAbyte(mem_addr);
  155   2          I2C_Check_ACK();
  156   2          if(!F0)
  157   2          {
  158   3            do
  159   3            {
  160   4              I2C_WriteAbyte(*p); p++;
  161   4              I2C_Check_ACK();
  162   4              if(F0)  break;
  163   4            }
  164   3            while(--number);
  165   3          }
  166   2        }
  167   1        I2C_Stop();
  168   1      }
  169          
  170          //========================================================================
  171          // 函数: void SI2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)
  172          // 描述: I2C读取数据函数.
  173          // 参数: dev_addr: 设备地址, mem_addr: 存储地址, *p读取数据存储位置, number读取数据个数.
  174          // 返回: none.
  175          // 版本: V1.0, 2020-09-15
  176          //========================================================================
  177          void SI2C_ReadNbyte(u8 dev_addr, u8 mem_addr, u8 *p, u8 number)  /*  DeviceAddress,WordAddress,First Data
             - Address,Byte lenth  */
  178          {
  179   1        I2C_Start();
  180   1        I2C_WriteAbyte(dev_addr);
  181   1        I2C_Check_ACK();
  182   1        if(!F0)
  183   1        {
  184   2          I2C_WriteAbyte(mem_addr);
  185   2          I2C_Check_ACK();
  186   2          if(!F0)
  187   2          {
  188   3            I2C_Start();
C251 COMPILER V5.60.0,  STC32G_Soft_I2C                                                    26/11/24  21:24:50  PAGE 4   

  189   3            I2C_WriteAbyte(dev_addr|1);
  190   3            I2C_Check_ACK();
  191   3            if(!F0)
  192   3            {
  193   4              do
  194   4              {
  195   5                *p = I2C_ReadAbyte();   p++;
  196   5                if(number != 1)     S_ACK();    //send ACK
  197   5              }
  198   4              while(--number);
  199   4              S_NoACK();          //send no ACK
  200   4            }
  201   3          }
  202   2        }
  203   1        I2C_Stop();
  204   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       353     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          6
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
