C251 COMPILER V5.60.0,  APP_INT_UART                                                       26/11/24  21:24:41  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_INT_UART
OBJECT MODULE PLACED IN .\list\APP_INT_UART.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\App\src\APP_INT_UART.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;..\
                    -User;..\App\inc) DEBUG PRINT(.\list\APP_INT_UART.lst) TABS(2) OBJECT(.\list\APP_INT_UART.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP_INT_UART.h"
   14          #include  "STC32G_GPIO.h"
   15          #include  "STC32G_Exti.h"
   16          #include  "STC32G_UART.h"
   17          #include  "STC32G_Delay.h"
   18          #include  "STC32G_NVIC.h"
   19          
   20          /*************  功能说明  **************
   21          
   22          演示INT0~INT4 5个唤醒源将MCU从休眠唤醒.
   23          
   24          从串口输出唤醒源跟唤醒次数，115200,N,8,1.
   25          
   26          用定时器做波特率发生器，建议使用1T模式(除非低波特率用12T)，并选择可被波特率整除的时钟频率，以提高精度。
   27          
   28          下载时, 选择时钟 22.1184MHz (用户可在"config.h"修改频率).
   29          
   30          ******************************************/
   31          
   32          
   33          //========================================================================
   34          //                               本地常量声明 
   35          //========================================================================
   36          
   37          sbit INT0 = P3^2;
   38          sbit INT1 = P3^3;
   39          sbit INT2 = P3^6;
   40          sbit INT3 = P3^7;
   41          sbit INT4 = P3^0;
   42          
   43          //========================================================================
   44          //                               本地变量声明
   45          //========================================================================
   46          
   47          u8 WakeUpCnt;
   48          
   49          //========================================================================
   50          //                               本地函数声明
   51          //========================================================================
   52          
   53          
   54          //========================================================================
   55          //                            外部函数和变量声明
   56          //========================================================================
   57          
   58          
C251 COMPILER V5.60.0,  APP_INT_UART                                                       26/11/24  21:24:41  PAGE 2   

   59          //========================================================================
   60          // 函数: INTtoUART_init
   61          // 描述: 用户初始化程序.
   62          // 参数: None.
   63          // 返回: None.
   64          // 版本: V1.0, 2020-09-28
   65          //========================================================================
   66          void INTtoUART_init(void)
   67          {
   68   1        EXTI_InitTypeDef  Exti_InitStructure;         //结构定义
   69   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
   70   1      
   71   1        P3_MODE_IO_PU(GPIO_Pin_All);    //P3.0~P3.7 设置为准双向口
   72   1        P4_MODE_IO_PU(GPIO_Pin_6 | GPIO_Pin_7); //P4.6,P4.7 设置为准双向口
   73   1        P3_PULL_UP_ENABLE(GPIO_Pin_All);//P3 口内部上拉电阻使能
   74   1      
   75   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,
             -UART_9bit_BRTx
   76   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //选择波特率发生器, BRT_Timer2 (注意: 串口2固定使用BRT
             -_Timer2)
   77   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率,     110 ~ 115200
   78   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
   79   1        UART_Configuration(UART2, &COMx_InitStructure);   //初始化串口 UART1,UART2,UART3,UART4
   80   1        NVIC_UART2_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
   81   1        //------------------------------------------------
   82   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//中断模式,   EXT_MODE_RiseFall,EXT_MODE_Fall
   83   1        Ext_Inilize(EXT_INT0,&Exti_InitStructure);        //初始化
   84   1        NVIC_INT0_Init(ENABLE,Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
   85   1      
   86   1        Exti_InitStructure.EXTI_Mode      = EXT_MODE_Fall;//中断模式,   EXT_MODE_RiseFall,EXT_MODE_Fall
   87   1        Ext_Inilize(EXT_INT1,&Exti_InitStructure);        //初始化
   88   1        NVIC_INT1_Init(ENABLE,Priority_0);    //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
   89   1      
   90   1        NVIC_INT2_Init(ENABLE,NULL);    //中断使能, ENABLE/DISABLE; 无优先级
   91   1        NVIC_INT3_Init(ENABLE,NULL);    //中断使能, ENABLE/DISABLE; 无优先级
   92   1        NVIC_INT4_Init(ENABLE,NULL);    //中断使能, ENABLE/DISABLE; 无优先级
   93   1        
   94   1        PrintString2("外中断INT唤醒测试\r\n");
   95   1      }
   96          
   97          //========================================================================
   98          // 函数: Sample_INTtoUART
   99          // 描述: 用户应用程序.
  100          // 参数: None.
  101          // 返回: None.
  102          // 版本: V1.0, 2020-09-24
  103          //========================================================================
  104          void Sample_INTtoUART(void)
  105          {
  106   1        if(!INT0) return; //等待外中断为高电平
  107   1        if(!INT1) return; //等待外中断为高电平
  108   1        if(!INT2) return; //等待外中断为高电平
  109   1        if(!INT3) return; //等待外中断为高电平
  110   1        if(!INT4) return; //等待外中断为高电平
  111   1        delay_ms(10); //delay 10ms
  112   1      
  113   1        if(!INT0) return; //等待外中断为高电平
  114   1        if(!INT1) return; //等待外中断为高电平
  115   1        if(!INT2) return; //等待外中断为高电平
  116   1        if(!INT3) return; //等待外中断为高电平
  117   1        if(!INT4) return; //等待外中断为高电平
  118   1      
  119   1        WakeUpSource = 0;
C251 COMPILER V5.60.0,  APP_INT_UART                                                       26/11/24  21:24:41  PAGE 3   

  120   1      
  121   1        PrintString2("MCU进入休眠状态！\r\n");
  122   1        PD = 1;   //Sleep
  123   1        _nop_();
  124   1        _nop_();
  125   1        _nop_();
  126   1        _nop_();
  127   1        _nop_();
  128   1        _nop_();
  129   1        _nop_();
  130   1        _nop_();
  131   1        delay_ms(1);  //delay 1ms
  132   1        
  133   1        if(WakeUpSource == 1) PrintString2("外中断INT0唤醒  ");
  134   1        if(WakeUpSource == 2) PrintString2("外中断INT1唤醒  ");
  135   1        if(WakeUpSource == 3) PrintString2("外中断INT2唤醒  ");
  136   1        if(WakeUpSource == 4) PrintString2("外中断INT3唤醒  ");
  137   1        if(WakeUpSource == 5) PrintString2("外中断INT4唤醒  ");
  138   1        
  139   1        WakeUpCnt++;
  140   1        TX2_write2buff((u8)(WakeUpCnt/100+'0'));
  141   1        TX2_write2buff((u8)(WakeUpCnt%100/10+'0'));
  142   1        TX2_write2buff((u8)(WakeUpCnt%10+'0'));
  143   1        PrintString2("次唤醒\r\n");
  144   1      }
  145          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       398     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         1         10
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       134     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
