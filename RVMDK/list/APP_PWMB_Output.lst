C251 COMPILER V5.60.0,  APP_PWMB_Output                                                    26/11/24  21:24:45  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_PWMB_Output
OBJECT MODULE PLACED IN .\list\APP_PWMB_Output.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\App\src\APP_PWMB_Output.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;
                    -..\User;..\App\inc) DEBUG PRINT(.\list\APP_PWMB_Output.lst) TABS(2) OBJECT(.\list\APP_PWMB_Output.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP.h"
   14          #include  "STC32G_PWM.h"
   15          #include  "STC32G_GPIO.h"
   16          #include  "STC32G_NVIC.h"
   17          
   18          /*************  功能说明  **************
   19          
   20          高级PWM定时器 PWM5,PWM6,PWM7,PWM8 每个通道都可独立实现PWM输出.
   21          
   22          4个通道PWM根据需要设置对应输出口，可通过示波器观察输出的信号.
   23          
   24          PWM周期和占空比可以自定义设置，最高可达65535.
   25          
   26          下载时, 选择时钟 24MHZ (用户可在"config.h"修改频率).
   27          
   28          ******************************************/
   29          
   30          
   31          //========================================================================
   32          //                               本地常量声明 
   33          //========================================================================
   34          
   35          
   36          //========================================================================
   37          //                               本地变量声明
   38          //========================================================================
   39          
   40          PWMx_Duty PWMB_Duty;
   41          bit PWM5_Flag;
   42          bit PWM6_Flag;
   43          bit PWM7_Flag;
   44          bit PWM8_Flag;
   45          
   46          //========================================================================
   47          //                               本地函数声明
   48          //========================================================================
   49          
   50          
   51          //========================================================================
   52          //                            外部函数和变量声明
   53          //========================================================================
   54          
   55          
   56          //========================================================================
   57          // 函数: PWMB_Output_init
   58          // 描述: 用户初始化程序.
C251 COMPILER V5.60.0,  APP_PWMB_Output                                                    26/11/24  21:24:45  PAGE 2   

   59          // 参数: None.
   60          // 返回: None.
   61          // 版本: V1.0, 2020-09-28
   62          //========================================================================
   63          void PWMB_Output_init(void)
   64          {
   65   1        PWMx_InitDefine   PWMx_InitStructure;
   66   1        
   67   1        PWMB_Duty.PWM5_Duty = 128;
   68   1        PWMB_Duty.PWM6_Duty = 256;
   69   1        PWMB_Duty.PWM7_Duty = 512;
   70   1        PWMB_Duty.PWM8_Duty = 1024;
   71   1      
   72   1        PWMx_InitStructure.PWM_Mode    =  CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATCH_IN
             -VALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
   73   1        PWMx_InitStructure.PWM_Duty    = PWMB_Duty.PWM5_Duty; //PWM占空比时间, 0~Period
   74   1        PWMx_InitStructure.PWM_EnoSelect   = ENO5P;         //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4
             -P,ENO4N / ENO5P,ENO6P,ENO7P,ENO8P
   75   1        PWM_Configuration(PWM5, &PWMx_InitStructure);       //初始化PWM,  PWMA,PWMB
   76   1      
   77   1        PWMx_InitStructure.PWM_Mode    =  CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATCH_IN
             -VALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
   78   1        PWMx_InitStructure.PWM_Duty    = PWMB_Duty.PWM6_Duty; //PWM占空比时间, 0~Period
   79   1        PWMx_InitStructure.PWM_EnoSelect   = ENO6P;         //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4
             -P,ENO4N / ENO5P,ENO6P,ENO7P,ENO8P
   80   1        PWM_Configuration(PWM6, &PWMx_InitStructure);       //初始化PWM,  PWMA,PWMB
   81   1      
   82   1        PWMx_InitStructure.PWM_Mode    =  CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATCH_IN
             -VALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
   83   1        PWMx_InitStructure.PWM_Duty    = PWMB_Duty.PWM7_Duty; //PWM占空比时间, 0~Period
   84   1        PWMx_InitStructure.PWM_EnoSelect   = ENO7P;         //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4
             -P,ENO4N / ENO5P,ENO6P,ENO7P,ENO8P
   85   1        PWM_Configuration(PWM7, &PWMx_InitStructure);       //初始化PWM,  PWMA,PWMB
   86   1      
   87   1        PWMx_InitStructure.PWM_Mode    =  CCMRn_PWM_MODE1;  //模式,   CCMRn_FREEZE,CCMRn_MATCH_VALID,CCMRn_MATCH_IN
             -VALID,CCMRn_ROLLOVER,CCMRn_FORCE_INVALID,CCMRn_FORCE_VALID,CCMRn_PWM_MODE1,CCMRn_PWM_MODE2
   88   1        PWMx_InitStructure.PWM_Duty    = PWMB_Duty.PWM8_Duty; //PWM占空比时间, 0~Period
   89   1        PWMx_InitStructure.PWM_EnoSelect   = ENO8P;         //输出通道选择, ENO1P,ENO1N,ENO2P,ENO2N,ENO3P,ENO3N,ENO4
             -P,ENO4N / ENO5P,ENO6P,ENO7P,ENO8P
   90   1        PWM_Configuration(PWM8, &PWMx_InitStructure);       //初始化PWM,  PWMA,PWMB
   91   1      
   92   1        PWMx_InitStructure.PWM_Period   = 2047;             //周期时间,   0~65535
   93   1        PWMx_InitStructure.PWM_DeadTime = 0;                //死区发生器设置, 0~255
   94   1        PWMx_InitStructure.PWM_MainOutEnable= ENABLE;       //主输出使能, ENABLE,DISABLE
   95   1        PWMx_InitStructure.PWM_CEN_Enable   = ENABLE;       //使能计数器, ENABLE,DISABLE
   96   1        PWM_Configuration(PWMB, &PWMx_InitStructure);       //初始化PWM通用寄存器,  PWMA,PWMB
   97   1      
   98   1        PWM5_USE_P74();
   99   1        PWM6_USE_P75();
  100   1        PWM7_USE_P76();
  101   1        PWM8_USE_P77();
  102   1      
  103   1        NVIC_PWM_Init(PWMB,DISABLE,Priority_0);
  104   1      }
  105          
  106          //========================================================================
  107          // 函数: Sample_PWMB_Output
  108          // 描述: 用户应用程序.
  109          // 参数: None.
  110          // 返回: None.
  111          // 版本: V1.0, 2020-09-28
  112          //========================================================================
  113          void Sample_PWMB_Output(void)
  114          {
  115   1        if(!PWM5_Flag)
  116   1        {
C251 COMPILER V5.60.0,  APP_PWMB_Output                                                    26/11/24  21:24:45  PAGE 3   

  117   2          PWMB_Duty.PWM5_Duty++;
  118   2          if(PWMB_Duty.PWM5_Duty >= 2047) PWM5_Flag = 1;
  119   2        }
  120   1        else
  121   1        {
  122   2          PWMB_Duty.PWM5_Duty--;
  123   2          if(PWMB_Duty.PWM5_Duty <= 0) PWM5_Flag = 0;
  124   2        }
  125   1      
  126   1        if(!PWM6_Flag)
  127   1        {
  128   2          PWMB_Duty.PWM6_Duty++;
  129   2          if(PWMB_Duty.PWM6_Duty >= 2047) PWM6_Flag = 1;
  130   2        }
  131   1        else
  132   1        {
  133   2          PWMB_Duty.PWM6_Duty--;
  134   2          if(PWMB_Duty.PWM6_Duty <= 0) PWM6_Flag = 0;
  135   2        }
  136   1      
  137   1        if(!PWM7_Flag)
  138   1        {
  139   2          PWMB_Duty.PWM7_Duty++;
  140   2          if(PWMB_Duty.PWM7_Duty >= 2047) PWM7_Flag = 1;
  141   2        }
  142   1        else
  143   1        {
  144   2          PWMB_Duty.PWM7_Duty--;
  145   2          if(PWMB_Duty.PWM7_Duty <= 0) PWM7_Flag = 0;
  146   2        }
  147   1      
  148   1        if(!PWM8_Flag)
  149   1        {
  150   2          PWMB_Duty.PWM8_Duty++;
  151   2          if(PWMB_Duty.PWM8_Duty >= 2047) PWM8_Flag = 1;
  152   2        }
  153   1        else
  154   1        {
  155   2          PWMB_Duty.PWM8_Duty--;
  156   2          if(PWMB_Duty.PWM8_Duty <= 0) PWM8_Flag = 0;
  157   2        }
  158   1        
  159   1        UpdatePwm(PWMB, &PWMB_Duty);
  160   1      }
  161          
  162          
  163          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       402     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        16          9
  bit size             =         4     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
C251 COMPILER V5.60.0,  APP_PWMB_Output                                                    26/11/24  21:24:45  PAGE 4   

End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
