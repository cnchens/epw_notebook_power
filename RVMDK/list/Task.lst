C251 COMPILER V5.60.0,  Task                                                               26/11/24  21:24:40  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Task
OBJECT MODULE PLACED IN .\list\Task.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\User\Task.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;..\User;..\App
                    -\inc) DEBUG PRINT(.\list\Task.lst) TABS(2) OBJECT(.\list\Task.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "Task.h"
   14          #include  "app.h"
   15          
   16          //========================================================================
   17          //                               本地变量声明
   18          //========================================================================
   19          
   20          static TASK_COMPONENTS Task_Comps[]=
   21          {
   22          //状态  计数  周期  函数
   23            {0, 250, 250, Sample_Lamp},       /* task 1 Period： 250ms */
   24            {0, 200, 200, Sample_ADtoUART},   /* task 2 Period： 200ms */
   25          //  {0, 20, 20, Sample_INTtoUART},    /* task 3 Period： 20ms */
   26          //  {0, 1, 1, Sample_RTC},            /* task 4 Period： 1ms */
   27          //  {0, 1, 1, Sample_I2C_PS},         /* task 5 Period： 1ms */
   28          //  {0, 1, 1, Sample_SPI_PS},         /* task 6 Period： 1ms */
   29          //  {0, 1, 1, Sample_EEPROM},         /* task 7 Period： 1ms */
   30          //  {0, 100, 100, Sample_WDT},        /* task 8 Period： 100ms */
   31          //  {0, 1, 1, Sample_PWMA_Output},    /* task 9 Period： 1ms */
   32          //  {0, 1, 1, Sample_PWMB_Output},    /* task 10 Period： 1ms */
   33          //  {0, 500, 500, Sample_DMA_AD},     /* task 12 Period： 500ms */
   34          //  {0, 500, 500, Sample_DMA_M2M},    /* task 13 Period： 100ms */
   35          //  {0, 1, 1, Sample_DMA_UART},       /* task 14 Period： 1ms */
   36          //  {0, 1, 1, Sample_DMA_SPI_PS},     /* task 15 Period： 1ms */
   37          //  {0, 1, 1, Sample_DMA_LCM},        /* task 16 Period： 1ms */
   38          //  {0, 1, 1, Sample_DMA_I2C},        /* task 17 Period： 1ms */
   39          //  {0, 1, 1, Sample_CAN},            /* task 18 Period： 1ms */
   40          //  {0, 1, 1, Sample_LIN},            /* task 19 Period： 1ms */
   41          //  {0, 1, 1, Sample_USART_LIN},      /* task 20 Period： 1ms */
   42          //  {0, 1, 1, Sample_USART2_LIN},     /* task 21 Period： 1ms */
   43          //  {0, 1, 1, Sample_HSSPI},          /* task 22 Period： 1ms */
   44          //  {0, 1, 1, Sample_HSPWM},          /* task 22 Period： 1ms */
   45            /* Add new task here */
   46          };
   47          
   48          u8 Tasks_Max = sizeof(Task_Comps)/sizeof(Task_Comps[0]);
   49          
   50          //========================================================================
   51          // 函数: Task_Handler_Callback
   52          // 描述: 任务标记回调函数.
   53          // 参数: None.
   54          // 返回: None.
   55          // 版本: V1.0, 2012-10-22
   56          //========================================================================
   57          void Task_Marks_Handler_Callback(void)
   58          {
C251 COMPILER V5.60.0,  Task                                                               26/11/24  21:24:40  PAGE 2   

   59   1        u8 i;
   60   1        for(i=0; i<Tasks_Max; i++)
   61   1        {
   62   2          if(Task_Comps[i].TIMCount)    /* If the time is not 0 */
   63   2          {
   64   3            Task_Comps[i].TIMCount--;  /* Time counter decrement */
   65   3            if(Task_Comps[i].TIMCount == 0)  /* If time arrives */
   66   3            {
   67   4              /*Resume the timer value and try again */
   68   4              Task_Comps[i].TIMCount = Task_Comps[i].TRITime;  
   69   4              Task_Comps[i].Run = 1;    /* The task can be run */
   70   4            }
   71   3          }
   72   2        }
   73   1      }
   74          
   75          //========================================================================
   76          // 函数: Task_Pro_Handler_Callback
   77          // 描述: 任务处理回调函数.
   78          // 参数: None.
   79          // 返回: None.
   80          // 版本: V1.0, 2012-10-22
   81          //========================================================================
   82          void Task_Pro_Handler_Callback(void)
   83          {
   84   1        u8 i;
   85   1        for(i=0; i<Tasks_Max; i++)
   86   1        {
   87   2          if(Task_Comps[i].Run) /* If task can be run */
   88   2          {
   89   3            Task_Comps[i].Run = 0;    /* Flag clear 0 */
   90   3            Task_Comps[i].TaskHook();  /* Run task */
   91   3          }
   92   2        }
   93   1      }
   94          
   95          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       102     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        15     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        23     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
