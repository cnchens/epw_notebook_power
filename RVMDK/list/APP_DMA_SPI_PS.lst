C251 COMPILER V5.60.0,  APP_DMA_SPI_PS                                                     26/11/24  21:24:44  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_DMA_SPI_PS
OBJECT MODULE PLACED IN .\list\APP_DMA_SPI_PS.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\App\src\APP_DMA_SPI_PS.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;.
                    -.\User;..\App\inc) DEBUG PRINT(.\list\APP_DMA_SPI_PS.lst) TABS(2) OBJECT(.\list\APP_DMA_SPI_PS.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP_DMA_SPI_PS.h"
   14          #include  "STC32G_GPIO.h"
   15          #include  "STC32G_SPI.h"
   16          #include  "STC32G_UART.h"
   17          #include  "STC32G_NVIC.h"
   18          #include  "STC32G_DMA.h"
   19          
   20          /*************  ¹¦ÄÜËµÃ÷  **************
   21          
   22          UART_DMA, M2M_DMA, SPI_DMA ×ÛºÏÊ¹ÓÃÑÝÊ¾Àý³Ì.
   23          
   24          Í¨¹ý´®¿Ú·¢ËÍÊý¾Ý¸øMCU1£¬MCU1½«½ÓÊÕµ½µÄÊý¾ÝÓÉSPI·¢ËÍ¸øMCU2£¬MCU2ÔÙÍ¨¹ý´®¿Ú·¢ËÍ³öÈ¥.
   25          
   26          Í¨¹ý´®¿Ú·¢ËÍÊý¾Ý¸øMCU2£¬MCU2½«½ÓÊÕµ½µÄÊý¾ÝÓÉSPI·¢ËÍ¸øMCU1£¬MCU1ÔÙÍ¨¹ý´®¿Ú·¢ËÍ³öÈ¥.
   27          
   28          MCU1/MCU2: UART½ÓÊÕ -> UART Rx DMA -> M2M -> SPI Tx DMA -> SPI·¢ËÍ
   29          
   30          MCU2/MCU1: SPI½ÓÊÕ -> SPI Rx DMA -> M2M -> UART Tx DMA -> UART·¢ËÍ
   31          
   32                   MCU1                          MCU2
   33            |-----------------|           |-----------------|
   34            |            MISO |-----------| MISO            |
   35          --| TX         MOSI |-----------| MOSI         TX |--
   36            |            SCLK |-----------| SCLK            |
   37          --| RX           SS |-----------| SS           RX |--
   38            |-----------------|           |-----------------|
   39          
   40          
   41          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 24MHz (¿ÉÒÔÔÚÅäÖÃÎÄ¼þ"config.h"ÖÐÐÞ¸Ä).
   42          
   43          ******************************************/
   44          
   45          //========================================================================
   46          //                               ±¾µØ³£Á¿ÉùÃ÷ 
   47          //========================================================================
   48          
   49          #define BUF_LENGTH          107     //n+1
   50          
   51          //========================================================================
   52          //                               ±¾µØ±äÁ¿ÉùÃ÷
   53          //========================================================================
   54          
   55          u8 xdata UartTxBuffer[256];
   56          u8 xdata UartRxBuffer[256];
   57          u8 xdata SpiTxBuffer[256];
   58          u8 xdata SpiRxBuffer[256];
C251 COMPILER V5.60.0,  APP_DMA_SPI_PS                                                     26/11/24  21:24:44  PAGE 2   

   59          
   60          //========================================================================
   61          //                               ±¾µØº¯ÊýÉùÃ÷
   62          //========================================================================
   63          
   64          
   65          //========================================================================
   66          //                            Íâ²¿º¯ÊýºÍ±äÁ¿ÉùÃ÷
   67          //========================================================================
   68          
   69          
   70          //========================================================================
   71          // º¯Êý: DMA_SPI_PS_init
   72          // ÃèÊö: ÓÃ»§³õÊ¼»¯³ÌÐò.
   73          // ²ÎÊý: None.
   74          // ·µ»Ø: None.
   75          // °æ±¾: V1.0, 2021-05-27
   76          //========================================================================
   77          void DMA_SPI_PS_init(void)
   78          {
   79   1        SPI_InitTypeDef   SPI_InitStructure;
   80   1        COMx_InitDefine   COMx_InitStructure;       //½á¹¹¶¨Òå
   81   1        DMA_M2M_InitTypeDef   DMA_M2M_InitStructure;    //½á¹¹¶¨Òå
   82   1        DMA_SPI_InitTypeDef   DMA_SPI_InitStructure;    //½á¹¹¶¨Òå
   83   1        DMA_UART_InitTypeDef  DMA_UART_InitStructure;   //½á¹¹¶¨Òå
   84   1      
   85   1        //----------------------------------------------
   86   1        P2_MODE_IO_PU(GPIO_Pin_All);    //P2 ÉèÖÃÎª×¼Ë«Ïò¿Ú
   87   1        P4_MODE_IO_PU(GPIO_Pin_6 | GPIO_Pin_7);   //P4.6,P4.7 ÉèÖÃÎª×¼Ë«Ïò¿Ú
   88   1      
   89   1        SPI_SS_2 = 1;
   90   1      
   91   1        //----------------------------------------------
   92   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //Ä£Ê½,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,
             -UART_9bit_BRTx
   93   1      //  COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //Ñ¡Ôñ²¨ÌØÂÊ·¢ÉúÆ÷, BRT_Timer2 (×¢Òâ: ´®¿Ú2¹Ì¶¨Ê¹ÓÃB
             -RT_Timer2, ËùÒÔ²»ÓÃÑ¡Ôñ)
   94   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //²¨ÌØÂÊ,     110 ~ 115200
   95   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //½ÓÊÕÔÊÐí,   ENABLE »ò DISABLE
   96   1        UART_Configuration(UART2, &COMx_InitStructure);   //³õÊ¼»¯´®¿Ú2 UART1,UART2,UART3,UART4
   97   1        NVIC_UART2_Init(ENABLE,Priority_1);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
   98   1        printf("STC32G UART-DMA-SPI»¥ÎªÖ÷´ÓÍ¸´«³ÌÐò.\r\n");
   99   1      
  100   1        //----------------------------------------------
  101   1        SPI_InitStructure.SPI_Enable    = ENABLE;       //SPIÆô¶¯    ENABLE, DISABLE
  102   1        SPI_InitStructure.SPI_SSIG      = DISABLE;        //Æ¬Ñ¡Î»     ENABLE(ºöÂÔSSÒý½Å¹¦ÄÜ), DISABLE(SSÈ·¶¨Ö÷»ú´Ó»
             -ú)
  103   1        SPI_InitStructure.SPI_FirstBit  = SPI_MSB;        //ÒÆÎ»·½Ïò   SPI_MSB, SPI_LSB
  104   1        SPI_InitStructure.SPI_Mode      = SPI_Mode_Slave;   //Ö÷´ÓÑ¡Ôñ   SPI_Mode_Master, SPI_Mode_Slave
  105   1        SPI_InitStructure.SPI_CPOL      = SPI_CPOL_Low;     //Ê±ÖÓÏàÎ»   SPI_CPOL_High,   SPI_CPOL_Low
  106   1        SPI_InitStructure.SPI_CPHA      = SPI_CPHA_1Edge;   //Êý¾Ý±ßÑØ   SPI_CPHA_1Edge,  SPI_CPHA_2Edge
  107   1        SPI_InitStructure.SPI_Speed     = SPI_Speed_16;     //SPIËÙ¶È    SPI_Speed_4, SPI_Speed_8, SPI_Speed_16, S
             -PI_Speed_2
  108   1        SPI_Init(&SPI_InitStructure);
  109   1        NVIC_SPI_Init(DISABLE,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pri
             -ority_2,Priority_3
  110   1      
  111   1        //----------------------------------------------
  112   1        DMA_UART_InitStructure.DMA_TX_Length = BUF_LENGTH;  //DMA´«Êä×Ü×Ö½ÚÊý   (0~65535) + 1
  113   1        DMA_UART_InitStructure.DMA_TX_Buffer = (u16)UartTxBuffer; //·¢ËÍÊý¾Ý´æ´¢µØÖ·
  114   1        DMA_UART_InitStructure.DMA_RX_Length = BUF_LENGTH;  //DMA´«Êä×Ü×Ö½ÚÊý   (0~65535) + 1
  115   1        DMA_UART_InitStructure.DMA_RX_Buffer = (u16)UartRxBuffer; //½ÓÊÕÊý¾Ý´æ´¢µØÖ·
  116   1        DMA_UART_InitStructure.DMA_TX_Enable = ENABLE;    //DMAÊ¹ÄÜ   ENABLE,DISABLE
  117   1        DMA_UART_InitStructure.DMA_RX_Enable = ENABLE;    //DMAÊ¹ÄÜ   ENABLE,DISABLE
  118   1        DMA_UART_Inilize(UART2, &DMA_UART_InitStructure); //³õÊ¼»¯
C251 COMPILER V5.60.0,  APP_DMA_SPI_PS                                                     26/11/24  21:24:44  PAGE 3   

  119   1      
  120   1        NVIC_DMA_UART2_Tx_Init(ENABLE,Priority_0,Priority_0);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priori
             -ty_0~Priority_3; ×ÜÏßÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~Priority_3
  121   1        NVIC_DMA_UART2_Rx_Init(ENABLE,Priority_0,Priority_0);   //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priori
             -ty_0~Priority_3; ×ÜÏßÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~Priority_3
  122   1        DMA_UR2R_CLRFIFO();   //Çå¿Õ DMA FIFO
  123   1        DMA_UR2R_TRIG();  //´¥·¢UART½ÓÊÕ¹¦ÄÜ
  124   1      
  125   1        //----------------------------------------------
  126   1        DMA_M2M_InitStructure.DMA_Enable = ENABLE;      //DMAÊ¹ÄÜ   ENABLE,DISABLE
  127   1        DMA_M2M_InitStructure.DMA_Length = BUF_LENGTH;      //DMA´«Êä×Ü×Ö½ÚÊý   (0~65535) + 1
  128   1        DMA_M2M_InitStructure.DMA_Tx_Buffer = (u16)UartRxBuffer;  //·¢ËÍÊý¾Ý´æ´¢µØÖ·
  129   1        DMA_M2M_InitStructure.DMA_Rx_Buffer = (u16)SpiTxBuffer; //½ÓÊÕÊý¾Ý´æ´¢µØÖ·
  130   1        DMA_M2M_InitStructure.DMA_SRC_Dir = M2M_ADDR_INC;   //Êý¾ÝÔ´µØÖ·¸Ä±ä·½Ïò    M2M_ADDR_INC,M2M_ADDR_DEC
  131   1        DMA_M2M_InitStructure.DMA_DEST_Dir = M2M_ADDR_INC;  //Êý¾ÝÄ¿±êµØÖ·¸Ä±ä·½Ïò  M2M_ADDR_INC,M2M_ADDR_DEC
  132   1        DMA_M2M_Inilize(&DMA_M2M_InitStructure);    //³õÊ¼»¯
  133   1        NVIC_DMA_M2M_Init(ENABLE,Priority_0,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~
             -Priority_3; ×ÜÏßÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~Priority_3
  134   1      
  135   1        //----------------------------------------------
  136   1        DMA_SPI_InitStructure.DMA_Enable = DISABLE;         //DMAÊ¹ÄÜ   ENABLE,DISABLE
  137   1        DMA_SPI_InitStructure.DMA_Tx_Enable = ENABLE;       //DMA·¢ËÍÊý¾ÝÊ¹ÄÜ   ENABLE,DISABLE
  138   1        DMA_SPI_InitStructure.DMA_Rx_Enable = ENABLE;       //DMA½ÓÊÕÊý¾ÝÊ¹ÄÜ   ENABLE,DISABLE
  139   1        DMA_SPI_InitStructure.DMA_Length = BUF_LENGTH;      //DMA´«Êä×Ü×Ö½ÚÊý   (0~65535) + 1
  140   1        DMA_SPI_InitStructure.DMA_Tx_Buffer = (u16)SpiTxBuffer; //·¢ËÍÊý¾Ý´æ´¢µØÖ·
  141   1        DMA_SPI_InitStructure.DMA_Rx_Buffer = (u16)SpiRxBuffer; //½ÓÊÕÊý¾Ý´æ´¢µØÖ·
  142   1        DMA_SPI_InitStructure.DMA_SS_Sel = SPI_SS_P22;      //×Ô¶¯¿ØÖÆSS½ÅÑ¡Ôñ  SPI_SS_P12,SPI_SS_P22,SPI_SS_P74,SP
             -I_SS_P35
  143   1        DMA_SPI_InitStructure.DMA_AUTO_SS = DISABLE;        //×Ô¶¯¿ØÖÆSS½ÅÊ¹ÄÜ    ENABLE,DISABLE
  144   1        DMA_SPI_Inilize(&DMA_SPI_InitStructure);    //³õÊ¼»¯
  145   1        SET_DMA_SPI_CR(DMA_ENABLE | SPI_TRIG_S | CLR_FIFO); //bit7 1:Ê¹ÄÜ SPI_DMA, bit5 1:¿ªÊ¼ SPI_DMA ´Ó»úÄ£Ê½,
             - bit0 1:Çå³ý SPI_DMA FIFO
  146   1        NVIC_DMA_SPI_Init(ENABLE,Priority_0,Priority_0);    //ÖÐ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~
             -Priority_3; ×ÜÏßÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0~Priority_3
  147   1      }
  148          
  149          void M2M_UART_SPI(u16 txbuf, u16 rxbuf)
  150          {
  151   1        DMA_M2M_CLR_STA();
  152   1        SET_M2M_TX_FIFO(txbuf);
  153   1        SET_M2M_RX_FIFO(rxbuf);
  154   1        DMA_M2M_TRIG();
  155   1      }
  156          
  157          void M2M_SPI_UART(u16 txbuf, u16 rxbuf)
  158          {
  159   1        DMA_M2M_CLR_STA();
  160   1        SET_M2M_TX_FIFO(txbuf);
  161   1        SET_M2M_RX_FIFO(rxbuf);
  162   1        DMA_M2M_TRIG();
  163   1      }
  164          
  165          void UART_DMA_Tx(void)
  166          {
  167   1        DMA_UR2T_TRIG();
  168   1      }
  169          
  170          void UART_DMA_Rx(void)
  171          {
  172   1        DMA_UR2R_TRIG();
  173   1      }
  174          
  175          void SPI_DMA_Master(void)
  176          {
  177   1        SET_DMA_SPI_CR(0);
  178   1        _nop_();
C251 COMPILER V5.60.0,  APP_DMA_SPI_PS                                                     26/11/24  21:24:44  PAGE 4   

  179   1        _nop_();
  180   1        _nop_();
  181   1        _nop_();
  182   1        _nop_();
  183   1        _nop_();
  184   1        SPI_SS_2 = 0;
  185   1        SPCTL = 0xd2;   //Ê¹ÄÜ SPI Ö÷»úÄ£Ê½£¬ºöÂÔSSÒý½Å¹¦ÄÜ
  186   1        SET_DMA_SPI_CR(DMA_ENABLE | SPI_TRIG_M);  //bit7 1:Ê¹ÄÜ SPI_DMA, bit6 1:¿ªÊ¼ SPI_DMA Ö÷»úÄ£Ê½
  187   1      }
  188          
  189          void SPI_DMA_Slave(void)
  190          {
  191   1        SET_DMA_SPI_CR(0);
  192   1        _nop_();
  193   1        _nop_();
  194   1        _nop_();
  195   1        _nop_();
  196   1        _nop_();
  197   1        _nop_();
  198   1        SPCTL = 0x42;  //ÖØÐÂÉèÖÃÎª´Ó»ú´ý»ú
  199   1        SET_DMA_SPI_CR(DMA_ENABLE | SPI_TRIG_S);  //bit7 1:Ê¹ÄÜ SPI_DMA, bit5 1:¿ªÊ¼ SPI_DMA ´Ó»úÄ£Ê½
  200   1      }
  201          
  202          //========================================================================
  203          // º¯Êý: Sample_DMA_SPI_PS
  204          // ÃèÊö: ÓÃ»§Ó¦ÓÃ³ÌÐò.
  205          // ²ÎÊý: None.
  206          // ·µ»Ø: None.
  207          // °æ±¾: V1.0, 2021-05-27
  208          //========================================================================
  209          void Sample_DMA_SPI_PS(void)
  210          {
  211   1        //UART½ÓÊÕ -> UART DMA -> SPI DMA -> SPI·¢ËÍ
  212   1        if(DmaRx2Flag)
  213   1        {
  214   2          DmaRx2Flag = 0;
  215   2          u2sFlag = 1;
  216   2          M2M_UART_SPI((u16)UartRxBuffer,(u16)SpiTxBuffer);     //UART Memory -> SPI Memory
  217   2        }
  218   1      
  219   1        if(SpiSendFlag)
  220   1        {
  221   2          SpiSendFlag = 0;
  222   2          UART_DMA_Rx();      //UART Recive Continue
  223   2          SPI_DMA_Master();   //SPI Send Memory
  224   2        }
  225   1      
  226   1        if(SpiTxFlag)
  227   1        {
  228   2          SpiTxFlag = 0;
  229   2          SPI_DMA_Slave();    //SPI Slave Mode
  230   2        }
  231   1      
  232   1        
  233   1        //SPI½ÓÊÕ -> SPI DMA -> UART DMA -> UART·¢ËÍ
  234   1        if(SpiRxFlag)
  235   1        {
  236   2          SpiRxFlag = 0;
  237   2          s2uFlag = 1;
  238   2          M2M_SPI_UART((u16)SpiRxBuffer, (u16)UartTxBuffer);      //SPI Memory -> UART Memory
  239   2        }
  240   1      
  241   1        if(UartSendFlag)
  242   1        {
  243   2          UartSendFlag = 0;
  244   2          SPI_DMA_Slave();    //SPI Slave Mode
C251 COMPILER V5.60.0,  APP_DMA_SPI_PS                                                     26/11/24  21:24:44  PAGE 5   

  245   2          UART_DMA_Tx();      //UART Send Memory
  246   2        }
  247   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       608     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =      1024     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         46
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        39     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
