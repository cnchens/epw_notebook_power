C251 COMPILER V5.60.0,  APP_EEPROM                                                         26/11/24  21:24:42  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_EEPROM
OBJECT MODULE PLACED IN .\list\APP_EEPROM.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\App\src\APP_EEPROM.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;..\Us
                    -er;..\App\inc) DEBUG PRINT(.\list\APP_EEPROM.lst) TABS(2) OBJECT(.\list\APP_EEPROM.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* Èç¹ûÒªÔÚ³ÌĞòÖĞÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌĞòÖĞ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌĞò            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP.h"
   14          #include  "STC32G_GPIO.h"
   15          #include  "STC32G_EEPROM.h"
   16          #include  "STC32G_UART.h"
   17          #include  "STC32G_NVIC.h"
   18          
   19          /*************  ±¾³ÌĞò¹¦ÄÜËµÃ÷  **************
   20          
   21          Í¨¹ı´®¿Ú2(P4.6 P4.7)¶ÔSTCÄÚ²¿×Ô´øµÄEEPROM(FLASH)½øĞĞ¶ÁĞ´²âÊÔ¡£
   22          
   23          ¶ÔFLASH×öÉÈÇø²Á³ı¡¢Ğ´Èë¡¢¶Á³öµÄ²Ù×÷£¬ÃüÁîÖ¸¶¨µØÖ·¡£
   24          
   25          Ä¬ÈÏ²¨ÌØÂÊ:  115200,N,8,1. 
   26          
   27          ´®¿ÚÃüÁîÉèÖÃ: (ÃüÁî×ÖÄ¸²»Çø·Ö´óĞ¡Ğ´)
   28              E 0x000040             --> ¶Ô0x000040µØÖ·ÉÈÇøÄÚÈİ½øĞĞ²Á³ı.
   29              W 0x000040 1234567890  --> ¶Ô0x000040µØÖ·Ğ´Èë×Ö·û1234567890.
   30              R 0x000040 10          --> ¶Ô0x000040µØÖ·¶Á³ö10¸ö×Ö½ÚÊı¾İ. 
   31          
   32          ×¢Òâ£ºÏÂÔØÊ±£¬ÏÂÔØ½çÃæ"Ó²¼şÑ¡Ïî"ÖĞÉèÖÃÓÃ»§EEPROM´óĞ¡£¬
   33          
   34          ²¢È·±£´®¿ÚÃüÁîÖĞµÄµØÖ·ÔÚEEPROMÉèÖÃµÄ´óĞ¡·¶Î§Ö®ÄÚ¡£
   35          
   36          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 24MHz (¿ÉÒÔÔÚÅäÖÃÎÄ¼ş"config.h"ÖĞĞŞ¸Ä).
   37          
   38          ******************************************/
   39          
   40          
   41          //========================================================================
   42          //                               ±¾µØ³£Á¿ÉùÃ÷ 
   43          //========================================================================
   44          
   45          #define     Max_Length       100    //¶ÁĞ´EEPROM»º³å³¤¶È
   46          
   47          //========================================================================
   48          //                               ±¾µØ±äÁ¿ÉùÃ÷
   49          //========================================================================
   50          
   51          u8  tmp[Max_Length];                //EEPROM²Ù×÷»º³å
   52          
   53          //========================================================================
   54          //                               ±¾µØº¯ÊıÉùÃ÷
   55          //========================================================================
   56          
   57          
   58          //========================================================================
C251 COMPILER V5.60.0,  APP_EEPROM                                                         26/11/24  21:24:42  PAGE 2   

   59          //                            Íâ²¿º¯ÊıºÍ±äÁ¿ÉùÃ÷
   60          //========================================================================
   61          
   62          
   63          //========================================================================
   64          // º¯Êı: EEPROM_init
   65          // ÃèÊö: ÓÃ»§³õÊ¼»¯³ÌĞò.
   66          // ²ÎÊı: None.
   67          // ·µ»Ø: None.
   68          // °æ±¾: V1.0, 2020-09-28
   69          //========================================================================
   70          void EEPROM_init(void)
   71          {
   72   1        COMx_InitDefine   COMx_InitStructure;         //½á¹¹¶¨Òå
   73   1      
   74   1        P4_MODE_IO_PU(GPIO_Pin_6 | GPIO_Pin_7);   //P4.6,P4.7 ÉèÖÃÎª×¼Ë«Ïò¿Ú
   75   1        
   76   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //Ä£Ê½,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,
             -UART_9bit_BRTx
   77   1      //  COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //Ñ¡Ôñ²¨ÌØÂÊ·¢ÉúÆ÷, BRT_Timer2 (×¢Òâ: ´®¿Ú2¹Ì¶¨Ê¹ÓÃB
             -RT_Timer2, ËùÒÔ²»ÓÃÑ¡Ôñ)
   78   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //²¨ÌØÂÊ,     110 ~ 115200
   79   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //½ÓÊÕÔÊĞí,   ENABLE »ò DISABLE
   80   1        UART_Configuration(UART2, &COMx_InitStructure);   //³õÊ¼»¯´®¿Ú2 UART1,UART2,UART3,UART4
   81   1        NVIC_UART2_Init(ENABLE,Priority_1);   //ÖĞ¶ÏÊ¹ÄÜ, ENABLE/DISABLE; ÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
   82   1      
   83   1        PrintString2("STC32ÏµÁĞµ¥Æ¬»úEEPROM²âÊÔ³ÌĞò£¬´®¿ÚÃüÁîÉèÖÃÈçÏÂ:\r\n");    //UART2·¢ËÍÒ»¸ö×Ö·û´®
   84   1        PrintString2("E 0x000040             --> ¶Ô0x000040µØÖ·ÉÈÇøÄÚÈİ½øĞĞ²Á³ı.\r\n");     //UART2·¢ËÍÒ»¸ö×Ö·û´
             -®
   85   1        PrintString2("W 0x000040 1234567890  --> ¶Ô0x000040µØÖ·Ğ´Èë×Ö·û1234567890.\r\n");  //UART2·¢ËÍÒ»¸ö×Ö·û´®
   86   1        PrintString2("R 0x000040 10          --> ¶Ô0x000040µØÖ·¶Á³ö10¸ö×Ö½ÚÄÚÈİ.\r\n");    //UART2·¢ËÍÒ»¸ö×Ö·û´®
   87   1      }
   88          
   89          //========================================================================
   90          // º¯Êı: CheckData
   91          // ÃèÊö: Êı¾İĞ£Ñéº¯Êı.
   92          // ²ÎÊı: None.
   93          // ·µ»Ø: None.
   94          // °æ±¾: V1.0, 2020-09-28
   95          //========================================================================
   96          static u8 CheckData(u8 dat)
   97          {
   98   1        if((dat >= '0') && (dat <= '9'))    return (dat-'0');
   99   1        if((dat >= 'A') && (dat <= 'F'))    return (dat-'A'+10);
  100   1        if((dat >= 'a') && (dat <= 'f'))    return (dat-'a'+10);
  101   1        return 0xff;
  102   1      }
  103          
  104          //========================================================================
  105          // º¯Êı: GetAddress
  106          // ÃèÊö: ¼ÆËã¸÷ÖÖÊäÈë·½Ê½µÄµØÖ·.
  107          // ²ÎÊı: ÎŞ.
  108          // ·µ»Ø: 32Î»EEPROMµØÖ·.
  109          // °æ±¾: V1.0, 2013-6-6
  110          //========================================================================
  111          static u32 GetAddress(void)
  112          {
  113   1        u32 address;
  114   1        u8  i,j;
  115   1        
  116   1        address = 0;
  117   1        if((RX2_Buffer[2] == '0') && (RX2_Buffer[3] == 'X'))
  118   1        {
  119   2          for(i=4; i<10; i++)
  120   2          {
C251 COMPILER V5.60.0,  APP_EEPROM                                                         26/11/24  21:24:42  PAGE 3   

  121   3            j = CheckData(RX2_Buffer[i]);
  122   3            if(j >= 0x10)   return 0xffffffff;   //error
  123   3            address = (address << 4) + j;
  124   3          }
  125   2          return (address);
  126   2        }
  127   1        return  0xffffffff;  //error
  128   1      }
  129          
  130          //========================================================================
  131          // º¯Êı: GetDataLength
  132          // ÃèÊö: »ñÈ¡Òª¶Á³öÊı¾İµÄ×Ö½ÚÊı.
  133          // ²ÎÊı: ÎŞ.
  134          // ·µ»Ø: Òª¶Á³öÊı¾İµÄ×Ö½ÚÊı.
  135          // °æ±¾: V1.0, 2013-6-6
  136          //========================================================================
  137          static u8 GetDataLength(void)
  138          {
  139   1        u8  i;
  140   1        u8  length;
  141   1        
  142   1        length = 0;
  143   1        for(i=11; i<COM2.RX_Cnt; i++)
  144   1        {
  145   2          if(CheckData(RX2_Buffer[i]) >= 10)  break;
  146   2          length = length * 10 + CheckData(RX2_Buffer[i]);
  147   2        }
  148   1        return (length);
  149   1      }
  150          
  151          //========================================================================
  152          // º¯Êı: Sample_EEPROM
  153          // ÃèÊö: ÓÃ»§Ó¦ÓÃ³ÌĞò.
  154          // ²ÎÊı: None.
  155          // ·µ»Ø: None.
  156          // °æ±¾: V1.0, 2020-09-28
  157          //========================================================================
  158          void Sample_EEPROM(void)
  159          {
  160   1        u8  i,j;
  161   1        u32 addr;
  162   1        u8  status;
  163   1      
  164   1        if(COM2.RX_TimeOut > 0)   //³¬Ê±¼ÆÊı
  165   1        {
  166   2          if(--COM2.RX_TimeOut == 0)
  167   2          {
  168   3      //      printf("ÊÕµ½ÄÚÈİÈçÏÂ£º ");
  169   3      //      for(i=0; i<COM2.RX_Cnt; i++)    printf("%c", RX2_Buffer[i]);    //°ÑÊÕµ½µÄÊı¾İÔ­Ñù·µ»Ø,ÓÃÓÚ²âÊÔ
  170   3      //      printf("\r\n");
  171   3      
  172   3            status = 0xff;  //×´Ì¬¸øÒ»¸ö·Ç0Öµ
  173   3            if((COM2.RX_Cnt >= 10) && (RX2_Buffer[1] == ' ')) //×î¶ÌÃüÁîÎª10¸ö×Ö½Ú
  174   3            {
  175   4              for(i=0; i<10; i++)
  176   4              {
  177   5                if((RX2_Buffer[i] >= 'a') && (RX2_Buffer[i] <= 'z'))    RX2_Buffer[i] = RX2_Buffer[i] - 'a' + 'A';  
             -//Ğ¡Ğ´×ª´óĞ´
  178   5              }
  179   4              addr = GetAddress();
  180   4              if(addr < 0x00ffffff)    //ÏŞÖÆµØÖ··¶Î§
  181   4              {
  182   5                if(RX2_Buffer[0] == 'E')    //Ğ´ÈëN¸ö×Ö½Ú
  183   5                {
  184   6                  EEPROM_SectorErase(addr);           //²Á³ıÉÈÇø
  185   6                  PrintString2("²Á³ı³É¹¦£¡\r\n");
C251 COMPILER V5.60.0,  APP_EEPROM                                                         26/11/24  21:24:42  PAGE 4   

  186   6                  status = 0; //ÃüÁîÕıÈ·
  187   6                }
  188   5      
  189   5                else if((RX2_Buffer[0] == 'W') && (RX2_Buffer[10] == ' '))    //Ğ´ÈëN¸ö×Ö½Ú
  190   5                {
  191   6                  j = COM2.RX_Cnt - 11;
  192   6                  if(j > Max_Length)  j = Max_Length; //Ô½½ç¼ì²â
  193   6                  //EEPROM_SectorErase(addr);           //²Á³ıÉÈÇø
  194   6                  EEPROM_write_n(addr,&RX2_Buffer[11],j);      //Ğ´N¸ö×Ö½Ú
  195   6                  PrintString2("ÒÑĞ´Èë");
  196   6                  if(j >= 100)    {TX2_write2buff((u8)(j/100+'0'));   j = j % 100;}
  197   6                  if(j >= 10)     {TX2_write2buff((u8)(j/10+'0'));    j = j % 10;}
  198   6                  TX2_write2buff((u8)(j%10+'0'));
  199   6                  PrintString2("×Ö½Ú£¡\r\n");
  200   6                  status = 0; //ÃüÁîÕıÈ·
  201   6                }
  202   5      
  203   5                else if((RX2_Buffer[0] == 'R') && (RX2_Buffer[10] == ' '))   //PCÇëÇó·µ»ØN×Ö½ÚEEPROMÊı¾İ
  204   5                {
  205   6                  j = GetDataLength();
  206   6                  if(j > Max_Length)  j = Max_Length; //Ô½½ç¼ì²â
  207   6                  if(j > 0)
  208   6                  {
  209   7                    PrintString2("¶Á³ö");
  210   7                    TX2_write2buff((u8)(j/10+'0'));
  211   7                    TX2_write2buff((u8)(j%10+'0'));
  212   7                    PrintString2("¸ö×Ö½ÚÄÚÈİÈçÏÂ£º\r\n");
  213   7                    EEPROM_read_n(addr,tmp,j);
  214   7                    for(i=0; i<j; i++)  TX2_write2buff(tmp[i]);
  215   7                    TX2_write2buff(0x0d);
  216   7                    TX2_write2buff(0x0a);
  217   7                    status = 0; //ÃüÁîÕıÈ·
  218   7                  }
  219   6                }
  220   5              }
  221   4            }
  222   3            if(status != 0) PrintString2("ÃüÁî´íÎó£¡\r\n");
  223   3            COM2.RX_Cnt = 0;
  224   3          }
  225   2        }
  226   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       743     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       100         15
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       300     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
