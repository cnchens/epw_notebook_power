C251 COMPILER V5.60.0,  APP_USART2_LIN                                                     26/11/24  22:56:07  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_USART2_LIN
OBJECT MODULE PLACED IN .\list\APP_USART2_LIN.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\App\src\APP_USART2_LIN.c XSMALL INTR2 BROWSE INCDIR(..\Driver\inc;.
                    -.\User;..\App\inc) DEBUG PRINT(.\list\APP_USART2_LIN.lst) TABS(2) OBJECT(.\list\APP_USART2_LIN.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP_USART2_LIN.h"
   14          #include  "STC32G_USART_LIN.h"
   15          #include  "STC32G_GPIO.h"
   16          #include  "STC32G_UART.h"
   17          #include  "STC32G_NVIC.h"
   18          #include  "STC32G_Switch.h"
   19          
   20          /*************   功能说明   ***************
   21          
   22          Lin主机模式收发测试：
   23          按一下P32口按键, 主机发送完整一帧数据.
   24          按一下P33口按键, 主机发送帧头并获取从机应答数据（合并成一串完整的帧）.
   25          
   26          Lin从机模式收发测试：
   27          收到一个非本机应答的完整帧后通过串口1输出.
   28          收到一个本机应答的帧头后(例如：ID=0x12), 发送缓存数据进行应答.
   29          需要修改头文件 "STC32G_UART.h" 里的定义 "#define  PRINTF_SELECT  UART1"，通过串口1打印信息
   30          
   31          默认传输速率：9600波特率, 用户可自行修改.
   32          
   33          下载时, 选择时钟 24MHz (用户可在"config.h"修改频率).
   34          
   35          ******************************************/
   36          
   37          sbit SLP_N  = P5^2;     //0: Sleep
   38          
   39          //========================================================================
   40          //                               本地常量声明 
   41          //========================================================================
   42          
   43          #define USART2_LIN_MASTER_MODE     1    //0: 从机模式; 1: 主机模式
   44          
   45          //========================================================================
   46          //                               本地变量声明
   47          //========================================================================
   48          
   49          u8 U2Lin_ID;
   50          u8 USART2_BUF[8];
   51          
   52          //========================================================================
   53          //                               本地函数声明
   54          //========================================================================
   55          
   56          
   57          //========================================================================
   58          //                            外部函数和变量声明
C251 COMPILER V5.60.0,  APP_USART2_LIN                                                     26/11/24  22:56:07  PAGE 2   

   59          //========================================================================
   60          
   61          extern bit B_ULinRX2_Flag;
   62          
   63          extern u8 Key1_cnt;
   64          extern u8 Key2_cnt;
   65          extern bit Key1_Flag;
   66          extern bit Key2_Flag;
   67          
   68          //========================================================================
   69          // 函数: USART2_LIN_init
   70          // 描述: 用户初始化程序.
   71          // 参数: None.
   72          // 返回: None.
   73          // 版本: V1.0, 2022-03-27
   74          //========================================================================
   75          void USART2_LIN_init(void)
   76          {
   77   1        USARTx_LIN_InitDefine LIN_InitStructure;        //结构定义
   78   1        COMx_InitDefine COMx_InitStructure;       //结构定义
   79   1      
   80   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx;   //模式,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,
             -UART_9bit_BRTx
   81   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;     //选择波特率发生器, BRT_Timer2 (注意: 串口2固定使用BRT
             -_Timer2, 所以不用选择)
   82   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率,     110 ~ 115200
   83   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE 或 DISABLE
   84   1        UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
   85   1        NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
   86   1      
   87   1      #if(USART2_LIN_MASTER_MODE==1)
   88   1        LIN_InitStructure.LIN_Mode = LinMasterMode; //LIN总线模式   LinMasterMode,LinSlaveMode
   89   1        LIN_InitStructure.LIN_AutoSync = DISABLE;   //自动同步使能    ENABLE,DISABLE
   90   1      #else
                 LIN_InitStructure.LIN_Mode = LinSlaveMode;  //LIN总线模式   LinMasterMode,LinSlaveMode
                 LIN_InitStructure.LIN_AutoSync = ENABLE;    //自动同步使能    ENABLE,DISABLE
               #endif
   94   1        LIN_InitStructure.LIN_Enable   = ENABLE;    //LIN功能使能   ENABLE,DISABLE
   95   1        LIN_InitStructure.LIN_Baudrate = 9600;      //LIN波特率
   96   1        UASRT_LIN_Configuration(USART2,&LIN_InitStructure);           //LIN 初始化
   97   1      
   98   1        NVIC_UART2_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
   99   1      
  100   1        P4_MODE_IO_PU(GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_6 | GPIO_Pin_7);   //P4.3,P4.4,P4.6,P4.7 设置为准双向口
  101   1        P5_MODE_IO_PU(GPIO_Pin_2);    //P5.2 设置为准双向口
  102   1        
  103   1        UART1_SW(UART1_SW_P43_P44);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  104   1        UART2_SW(UART2_SW_P46_P47);   //UART2_SW_P10_P11,UART2_SW_P46_P47
  105   1      
  106   1        //====初始化数据=====
  107   1        SLP_N = 1;
  108   1        U2Lin_ID = 0x32;
  109   1        USART2_BUF[0] = 0x81;
  110   1        USART2_BUF[1] = 0x22;
  111   1        USART2_BUF[2] = 0x33;
  112   1        USART2_BUF[3] = 0x44;
  113   1        USART2_BUF[4] = 0x55;
  114   1        USART2_BUF[5] = 0x66;
  115   1        USART2_BUF[6] = 0x77;
  116   1        USART2_BUF[7] = 0x88;
  117   1      }
  118          
  119          //========================================================================
  120          // 函数: Sample_USART2_LIN
C251 COMPILER V5.60.0,  APP_USART2_LIN                                                     26/11/24  22:56:07  PAGE 3   

  121          // 描述: 用户应用程序.
  122          // 参数: None.
  123          // 返回: None.
  124          // 版本: V1.0, 2022-03-27
  125          //========================================================================
  126          void Sample_USART2_LIN(void)
  127          {
  128   1        u8 i;
  129   1      
  130   1      #if(USART2_LIN_MASTER_MODE==1)
  131   1        if(!P32)
  132   1        {
  133   2          if(!Key1_Flag)
  134   2          {
  135   3            Key1_cnt++;
  136   3            if(Key1_cnt > 50)
  137   3            {
  138   4              Key1_Flag = 1;
  139   4              UsartLinSendFrame(USART2,U2Lin_ID, USART2_BUF, FRAME_LEN);  //发送一串完整数据
  140   4            }
  141   3          }
  142   2        }
  143   1        else
  144   1        {
  145   2          Key1_cnt = 0;
  146   2          Key1_Flag = 0;
  147   2        }
  148   1      
  149   1        if(!P33)
  150   1        {
  151   2          if(!Key2_Flag)
  152   2          {
  153   3            Key2_cnt++;
  154   3            if(Key2_cnt > 50)
  155   3            {
  156   4              Key2_Flag = 1;
  157   4              UsartLinSendHeader(USART2,0x13);  //发送帧头，获取数据帧，组成一个完整的帧
  158   4            }
  159   3          }
  160   2        }
  161   1        else
  162   1        {
  163   2          Key2_cnt = 0;
  164   2          Key2_Flag = 0;
  165   2        }
  166   1      #else
                 if((B_ULinRX2_Flag) && (COM2.RX_Cnt >= 2))
                 {
                   B_ULinRX2_Flag = 0;
               
                   if((RX2_Buffer[0] == 0x55) && ((RX2_Buffer[1] & 0x3f) == 0x12)) //PID -> ID
                   {
                     UsartLinSendData(USART2,USART2_BUF,FRAME_LEN);
                     UsartLinSendChecksum(USART2,USART2_BUF,FRAME_LEN);
                   }
                 }
               #endif
  178   1      
  179   1        if(COM2.RX_TimeOut > 0)     //超时计数
  180   1        {
  181   2          if(--COM2.RX_TimeOut == 0)
  182   2          {
  183   3            printf("Read Cnt = %d.\r\n",COM2.RX_Cnt);
  184   3            for(i=0; i<COM2.RX_Cnt; i++)    printf("0x%02x ",RX2_Buffer[i]);    //从串口输出收到的从机数据
  185   3            COM2.RX_Cnt  = 0;   //清除字节数
  186   3            printf("\r\n");
C251 COMPILER V5.60.0,  APP_USART2_LIN                                                     26/11/24  22:56:07  PAGE 4   

  187   3          }
  188   2        }
  189   1      }
  190          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       357     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         9         14
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        28     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
